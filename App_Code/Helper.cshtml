@helper ImageLink(string controller, string action, string imageUrl, string imageClass, string title)
{
    var Url = new System.Web.Mvc.UrlHelper(HttpContext.Current.Request.RequestContext);
    <a href="@Url.Action(action, controller)">
        <img src="@Url.Content(imageUrl)" class="@imageClass" title="@title" />
    </a>
}
@helper Icon(string controlId, string icon_class, string TooltipMessage, string ToolTipPlacement = "bottom")
{
    <span id="@controlId"
          class="icon fa @icon_class"
          title="@TooltipMessage"
          data-placement="@ToolTipPlacement">
    </span>
}
@helper IconCmd(string controller, string action, string icon_class, string TooltipMessage, string ToolTipPlacement = "bottom")
{
    var Url = new System.Web.Mvc.UrlHelper(HttpContext.Current.Request.RequestContext);
    <a href="@Url.Action(action,controller)" style="text-decoration:none">
        <span class="icon fa @icon_class"
              title="@TooltipMessage"
              data-placement="@ToolTipPlacement">
        </span>
    </a>
}
@helper IconConfirmCmd(string controller, string Action, string icon_class, string TooltipMessage, string ToolTipPlacement = "bottom")
{
    //// http://bootboxjs.com/documentation.html#bb-confirm
    /// To do window.location is considered has a new connexion and cause authentification problems
    var Url = new System.Web.Mvc.UrlHelper(HttpContext.Current.Request.RequestContext);
    <div onclick='bootbox.confirm("@TooltipMessage", function(result){ if (result) window.location.href = "@Url.Action(Action,controller)"; })'>
        <span class="icon fa @icon_class"
              title="@TooltipMessage"
              data-placement="@ToolTipPlacement">
        </span>
    </div>
}
@helper IconConfirmAjaxCmd(string controller, string Action, string icon_class, string TooltipMessage, string ToolTipPlacement = "bottom")
{
    //// http://bootboxjs.com/documentation.html#bb-confirm
    /// To do window.location is considered has a new connexion and cause authentification problems
    var Url = new System.Web.Mvc.UrlHelper(HttpContext.Current.Request.RequestContext);
    <div onclick='bootbox.confirm("@TooltipMessage", function(result) { if (result) ajaxActionCall("@Url.Action(Action,controller)") })'>
        <span class="icon fa @icon_class"
              title="@TooltipMessage"
              data-placement="@ToolTipPlacement">
        </span>
    </div>
}
@helper IconConfirmCmdWithParam(string controller, string Action, object extraparam, string icon_class, string TooltipMessage, string ToolTipPlacement = "bottom")
{
    //// http://bootboxjs.com/documentation.html#bb-confirm
    var Url = new System.Web.Mvc.UrlHelper(HttpContext.Current.Request.RequestContext);
    <div onclick='bootbox.confirm("@TooltipMessage", function(result){ if (result) window.location = "@(Url.Action(Action, controller, extraparam))"; })'>
        <span class="icon fa @icon_class"
              title="@TooltipMessage"
              data-placement="@ToolTipPlacement">
        </span>
    </div>
}
@helper ListToRadioButtonGroup(string name, System.Web.Mvc.SelectList options, int selectedValue)
{
    <div class="RadioButtonsGroup">
        @foreach (System.Web.Mvc.SelectListItem option in options.Items)
        {
            string id = name + "_" + option.Value;
            <div class="RadioButton">
                @if (option.Value == selectedValue.ToString())
                {
                    <input type="radio" name="@name" class="@name" id="@id" value="@option.Value.ToString()" checked />
                }
                else
                {
                    <input type="radio" name="@name" class="@name" id="@id" value="@option.Value.ToString()" />
                }
                <label for="@id">@option.Text</label>
            </div>
        }
    </div>
    <br />
}
@helper SelectionLists(string controlId, System.Web.Mvc.SelectList selectedItems, System.Web.Mvc.SelectList items, int size = 10)
{
    <div class="select_@controlId selectionsGrid">
        <select name='@controlId' size='@size.ToString()' multiple class='SelectedItems form-control'>
            @if (selectedItems != null)
            {
                foreach (var si in selectedItems)
                {
                    <option value='@si.Value'>@si.Text</option>
                }
            }
        </select>

        <div class="HorSelectionsCMD">
            <div class="AddSelection icon fa fa-circle-left" data-toggle="tooltip" data-placement="top" title="Ajouter"></div>
            <div class="RemoveSelection icon fa fa-circle-right" data-toggle="tooltip" data-placement="bottom" title="Retirer"></div>
            <div class="UnselectAll icon fa fa-times" data-toggle="tooltip" data-placement="bottom" title="Desélectionner"></div>
        </div>

        <div class="VerSelectionsCMD">
            <div class="AddSelection icon fa fa-circle-up" data-toggle="tooltip" data-placement="top" title="Ajouter"></div>
            <div class="RemoveSelection icon fa fa-circle-down" data-toggle="tooltip" data-placement="bottom" title="Retirer"></div>
            <div class="UnselectAll icon fa fa-times" data-toggle="tooltip" data-placement="bottom" title="Desélectionner"></div>
        </div>

        <select size='@size.ToString()' multiple class='UnselectedItems form-control'>
            @if (items != null)
            {
                foreach (var ui in items)
                {
                    if (selectedItems != null && selectedItems.Where(s => s.Value == ui.Value).FirstOrDefault() == null)
                    {
                        <option value='@ui.Value'>@ui.Text</option>
                    }
                }
            }
        </select>
    </div>
}
@helper ImageUploader(int modelId, string targetControlId, string imageUrl, string waitingImage = "", string TooltipMessage = "", string ToolTipPlacement = "bottom")
{
    var Url = new System.Web.Mvc.UrlHelper(HttpContext.Current.Request.RequestContext);
    imageUrl = Url.Content(imageUrl);
    waitingImage = Url.Content(waitingImage);
    <div class='imageUploader'
         id='@modelId'
         controlId='@targetControlId'
         imageSrc='@imageUrl'
         waitingImage='@waitingImage'
         data-toggle="tooltip"
         data-placement="@ToolTipPlacement"
         title="@TooltipMessage">
    </div>
}
@helper Image(string url, string cssClass)
{
    var Url = new System.Web.Mvc.UrlHelper(HttpContext.Current.Request.RequestContext);
    url = Url.Content(url);
    <div class="@cssClass" style="background:url(@url);"></div>
}